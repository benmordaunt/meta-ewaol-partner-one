EWAOL Tools
==================

As described in the EWAOL Quickstart guide, the meta-ewaol layer
includes support for building with kas. As well as the kas config files,
meta-ewaol-config contains a python script for initiating ci builds:
``meta-ewaol/meta-ewaol-config/tools/kas-ci-build.py``


Dependencies
-------------------

The kas-ci-build script requires python3:
- https://docs.python.org/3/using/unix.html

As well as the docker container engine:
- https://docs.docker.com/engine/install/

All other dependencies of bitbake and kas will be handled by the docker
container. This script uses containers to handle both the bitbake and kas
dependencies, by pulling the kas container:
- ghcr.io/siemens/kas/kas:latest.

This currently can only be configured by modifying CONTAINER_IMAGE_DEFAULT and
CONTAINER_IMAGE_VERSION_DEFAULT. Docker is the only support container engine,
so CONTAINER_ENGINE should not be modified.

Building
-------------------
To view the available optional parameters use:
``./meta-ewaol-config/kas/tools/kas-ci-build.py --help``

A basic build using this script can be initiated with:
``./meta-ewaol-config/kas/tools/kas-ci-build.py n1sdp.yml``
Which will build only the n1sdp images, and use the defaults for these paths:
- Build Output: ci-build/[yaml filename]/
- SSTATE_CACHE: ci-build/yocto-cache/sstate-cache/
- DL_DIR:       ci-build/yocto-cache/downloads/

No cache mirrors will be configured, and no artifacts will be deployed

These local mirrors can be changed using the optional parameters:
 - ``--sstate-dir=[local path]``
 - ``--dl-dir=[local path]``

Cache Mirrors
^^^^^^^^^^^^^^^^

kas-ci-build supports Read Only mirrors for the SSTATE CACHE and DOWNLOAD
mounted as local filepaths. Currently there is no support for http(s) paths.

These paths can be provided using:
 - ``--sstate-mirror=[local path]``
 - ``--downloads-mirror=[local path]``

The Environment variables *SSTATE_MIRRORS* and *SOURCE_MIRROR_URL* will be
carried through to bitbake if set in the build environment as an alternative
option. *INHERIT* and *BB_GENERATE_MIRROR_TARBALLS* are also passed through to
bitbake using *BB_ENV_EXTRAWHITE*.

Artifacts
^^^^^^^^^^^^^^^^

By passing ``--deploy-artifacts`` the build script will compress the config
files in [build_dir]/conf and all log files generated by the build, and store
them in the artifacts directory, in a folder with the same name as the build.

By default the artifacts directory is ``ci-build/artifacts/``, but this can
be configured using ``--artifacts-dir=[path]``. If the path doesn't exist it
will be created.

'all' target
^^^^^^^^^^^^^^^^
The list of yaml files ALL_TARGETS will be built sequentially if 'all' is passed
instead of the name of a yaml file.
